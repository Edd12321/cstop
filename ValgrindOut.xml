<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/edward/.dots/work/cstop/bin/Release/cstop</line>
</preamble>

<pid>17174</pid>
<ppid>4795</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind</exe>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/edward/.dots/work/cstop/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/home/edward/.dots/work/cstop/bin/Release/cstop</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:01.201 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x1096D4</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
    <frame>
      <ip>0x1092AF</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
    <frame>
      <ip>0x48BE28F</ip>
      <obj>/usr/lib/libc.so.6</obj>
      <fn>(below main)</fn>
      <dir>/usr/src/debug/glibc/csu/../sysdeps/nptl</dir>
      <file>libc_start_call_main.h</file>
      <line>58</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x109220</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x10963B</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
    <frame>
      <ip>0x1092AF</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
    <frame>
      <ip>0x48BE28F</ip>
      <obj>/usr/lib/libc.so.6</obj>
      <fn>(below main)</fn>
      <dir>/usr/src/debug/glibc/csu/../sysdeps/nptl</dir>
      <file>libc_start_call_main.h</file>
      <line>58</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x109220</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x96</unique>
  <tid>1</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param ioctl(TCSET{S,SW,SF}) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x499BE0A</ip>
      <obj>/usr/lib/libc.so.6</obj>
      <fn>tcsetattr</fn>
      <dir>/usr/src/debug/glibc/termios/../sysdeps/unix/sysv/linux</dir>
      <file>tcsetattr.c</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x10A3AA</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
    <frame>
      <ip>0x1092B4</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
    <frame>
      <ip>0x48BE28F</ip>
      <obj>/usr/lib/libc.so.6</obj>
      <fn>(below main)</fn>
      <dir>/usr/src/debug/glibc/csu/../sysdeps/nptl</dir>
      <file>libc_start_call_main.h</file>
      <line>58</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1fff0003d0 is on thread 1's stack</auxwhat>
  <auxwhat>in frame #0, created by tcsetattr (tcsetattr.c:45)</auxwhat>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x10A373</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
  </stack>
</error>

<fatal_signal>
  <tid>1</tid>
  <signo>15</signo>
  <signame>SIGTERM</signame>
  <sicode>0</sicode>
  <stack>
    <frame>
      <ip>0x496DBC5</ip>
      <obj>/usr/lib/libc.so.6</obj>
      <fn>__getdents</fn>
      <dir>/usr/src/debug/glibc/dirent/../sysdeps/unix/sysv/linux</dir>
      <file>getdents64.c</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x496DC74</ip>
      <obj>/usr/lib/libc.so.6</obj>
      <fn>readdir</fn>
      <dir>/usr/src/debug/glibc/dirent/../sysdeps/unix/sysv/linux</dir>
      <file>readdir64.c</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x10964C</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
    <frame>
      <ip>0x1092AF</ip>
      <obj>/home/edward/.dots/work/cstop/bin/Release/cstop</obj>
    </frame>
    <frame>
      <ip>0x48BE28F</ip>
      <obj>/usr/lib/libc.so.6</obj>
      <fn>(below main)</fn>
      <dir>/usr/src/debug/glibc/csu/../sysdeps/nptl</dir>
      <file>libc_start_call_main.h</file>
      <line>58</line>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:06:22.140 </time>
</status>

<errorcounts>
  <pair>
    <count>75732936</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>493734</count>
    <unique>0x0</unique>
  </pair>
  <pair>
    <count>493733</count>
    <unique>0x96</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

